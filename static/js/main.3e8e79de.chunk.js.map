{"version":3,"sources":["components/MovieList.jsx","components/SectionTitle.jsx","components/SearchBox.jsx","components/AddNomination.jsx","components/RemoveNomination.jsx","Images/movie_theater.jpg","components/NoMovie.jsx","Images/award.jpg","components/NoNomination.jsx","utilities/OMDbAPI.js","App.jsx","index.js"],"names":["MovieList","movies","NominationBtn","handleAddNomination","map","movie","idx","className","src","Poster","alt","onClick","SectionTitle","title","Grid","item","sm","Typography","variant","SearchBox","searchVal","setSearchVal","TextField","style","background","color","label","fullWidth","onChange","e","target","value","AddNomination","RemoveNomination","NoMovie","TheaterImg","position","align","NoNomination","awardImg","a","url","fetch","json","App","useState","setMovies","nominations","setNominations","useEffect","searchval","API","then","data","Search","nominatedMovies","JSON","parse","localStorage","getItem","Container","length","newNomination","setItem","stringify","filter","nomination","imdbID","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e8e79de.chunk.js","sourcesContent":["\r\nexport default function MovieList({ movies, NominationBtn, handleAddNomination }) {\r\n  return (\r\n    <>\r\n      {movies.map((movie, idx) => \r\n      <div className=\"movie-poster\" key={idx}>\r\n        <img className=\"poster-img\" src={movie.Poster} alt=\"movie-poster\" />\r\n        <div \r\n          className=\"add-nomination-container\"\r\n          onClick={() => handleAddNomination(movie)}\r\n        >\r\n          <NominationBtn />\r\n        </div>\r\n      </div>\r\n      )}\r\n    </>\r\n  );\r\n}","import { Grid, Typography } from '@material-ui/core';\r\n\r\nexport default function SectionTitle({ title }) {\r\n  return (\r\n    <Grid item sm=\"4\">\r\n      <Typography variant=\"h3\">{title}</Typography>\r\n    </Grid>\r\n  );\r\n}","import { Grid, TextField } from \"@material-ui/core\";\r\n\r\nexport default function SearchBox({ searchVal, setSearchVal }) {\r\n  return (\r\n    <Grid sm=\"6\">\r\n      <TextField \r\n        style={{ background: 'white' }}\r\n        color=\"white\"\r\n        label=\"Please Type Moive\"\r\n        variant=\"filled\"\r\n        fullWidth\r\n        onChange={(e) => setSearchVal(e.target.value)}\r\n      />\r\n    </Grid>\r\n  );\r\n}","import TheatersIcon from '@material-ui/icons/Theaters';\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function AddNomination() {\r\n  return (\r\n    <>\r\n      <Typography>Add to Nomination</Typography><TheatersIcon color=\"primary\" />\r\n    </>\r\n  );\r\n}","import { Typography } from \"@material-ui/core\";\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nexport default function RemoveNomination() {\r\n  return(\r\n    <>\r\n      <Typography>Remove from Nomination</Typography><DeleteForeverIcon color=\"secondary\" />\r\n    </>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/movie_theater.82ba0ad1.jpg\";","import { Typography } from \"@material-ui/core\";\r\nimport TheaterImg from '../Images/movie_theater.jpg';\r\n\r\nexport default function NoMovie() {\r\n  return (\r\n    <div className=\"no-container\">\r\n      <img className=\"no-img\" src={TheaterImg} alt=\"NomovieImg\" />\r\n      <Typography style={{ position: \"absolute\" }} align=\"center\" variant=\"h3\">No Movies!</Typography>\r\n    </div>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/award.8f6897d1.jpg\";","import { Typography } from \"@material-ui/core\";\r\nimport awardImg from \"../Images/award.jpg\";\r\n\r\nexport default function NoNomination() {\r\n  return (\r\n    <div className=\"no-container\">\r\n      <img className=\"no-img\" src={awardImg} alt=\"noNomiantionImg\" />\r\n      <Typography style={{ position: \"absolute\" }} variant=\"h3\" >Please Add Moive for Nomination</Typography>\r\n    </div>\r\n  );\r\n}","\r\nexport async function getMoives (searchVal) {\r\n  const url = `http://www.omdbapi.com/?s=${searchVal}&apikey=f135536d`;\r\n  return await (await fetch(url)).json();\r\n}","\r\nimport { useState, useEffect } from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport MovieList from \"./components/MovieList\";\r\nimport SectionTitle from \"./components/SectionTitle\";\r\nimport SearchBox from \"./components/SearchBox\";\r\nimport AddNomination from \"./components/AddNomination\";\r\nimport RemoveNomination from \"./components/RemoveNomination\";\r\nimport NoMovie from \"./components/NoMovie\";\r\nimport NoNomination from \"./components/NoNomination\";\r\n\r\nimport * as API from \"./utilities/OMDbAPI\";\r\n\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [nominations, setNominations] = useState([]);\r\n  const [searchVal, setSearchVal] = useState('');\r\n\r\n  useEffect((searchval) => {\r\n    if(searchVal) {\r\n      API.getMoives(searchVal)\r\n        .then(data =>  {\r\n          if(data.Search) {\r\n            setMovies(data.Search);\r\n          }\r\n        });\r\n    };\r\n}, [searchVal]);\r\n\r\nuseEffect(() => {\r\n  const nominatedMovies = JSON.parse(localStorage.getItem('react-moive-nominations'));\r\n  if(nominatedMovies) {\r\n    setNominations(nominatedMovies);\r\n  }\r\n}, []);\r\n\r\nfunction handleAddNomination(movie) {\r\n  const newNomination = [...nominations, movie];\r\n  setNominations(newNomination);\r\n  saveToLocalStorage(newNomination);\r\n}\r\n\r\nfunction handleRemoveNomination(movie) {\r\n  const newNomination = nominations.filter((nomination) => nomination.imdbID !== movie.imdbID);\r\n  setNominations(newNomination);\r\n}\r\n\r\nfunction saveToLocalStorage(item) {\r\n  localStorage.setItem('react-moive-nominations', JSON.stringify(item));\r\n}\r\n\r\n  return (\r\n    <Container className=\"moive-list\">\r\n      <div className=\"heading\">\r\n        <SectionTitle title=\"Movies\" />\r\n        <SearchBox searchVal={searchVal} setSearchVal={setSearchVal} />\r\n      </div>\r\n      <div className=\"row\">\r\n        {(movies.length > 0) \r\n        ? \r\n          <MovieList\r\n            movies={movies} \r\n            NominationBtn={AddNomination}\r\n            handleAddNomination={handleAddNomination}\r\n          />\r\n        : \r\n          <NoMovie />\r\n        }\r\n      </div>\r\n      <div className=\"heading\">\r\n        <SectionTitle title=\"Nominations\" />\r\n      </div>\r\n      <div className=\"row\">\r\n        {(nominations.length > 0) \r\n        ?\r\n          <MovieList \r\n            movies={nominations} \r\n            NominationBtn={RemoveNomination}\r\n            handleAddNomination={handleRemoveNomination}\r\n          />\r\n        :\r\n          <NoNomination />\r\n        }\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App.jsx';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}